namespace leaf
{
    class i32
    {
        <!pragma size 4!>
        
        public unbound inline bool operator (i32 l) +   (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) -   (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) *   (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) /   (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) <<< (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) <<  (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) <=  (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) <   (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) >>> (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) >>  (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) >=  (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) >   (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) ||  (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) |   (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) &&  (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) &   (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) ==  (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) !=  (i32 r) { assembly { } }
        public unbound inline bool operator (i32 l) ^   (i32 r) { assembly { } }
        public unbound inline bool operator ! (i32 r) { assembly { } }
        public unbound inline bool operator ~ (i32 r) { assembly { } }
        public unbound inline bool operator + (i32 r) { assembly { } }
        public unbound inline bool operator - (i32 r) { assembly { } }

        public string to_string()
        {
            
        }
    }
}